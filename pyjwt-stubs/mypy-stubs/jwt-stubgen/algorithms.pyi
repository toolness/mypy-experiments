# Stubs for jwt.algorithms (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from .compat import constant_time_compare as constant_time_compare, string_types as string_types
from .exceptions import InvalidKeyError as InvalidKeyError
from .utils import base64url_decode as base64url_decode, base64url_encode as base64url_encode, der_to_raw_signature as der_to_raw_signature, force_bytes as force_bytes, force_unicode as force_unicode, from_base64url_uint as from_base64url_uint, raw_to_der_signature as raw_to_der_signature, to_base64url_uint as to_base64url_uint

has_crypto = ...  # type: bool
requires_cryptography = ...  # type: Any

def get_default_algorithms(): ...

class Algorithm:
    def prepare_key(self, key): ...
    def sign(self, msg, key): ...
    def verify(self, msg, key, sig): ...
    @staticmethod
    def to_jwk(key_obj): ...
    @staticmethod
    def from_jwk(jwk): ...

class NoneAlgorithm(Algorithm):
    def prepare_key(self, key): ...
    def sign(self, msg, key): ...
    def verify(self, msg, key, sig): ...

class HMACAlgorithm(Algorithm):
    SHA256 = ...  # type: Any
    SHA384 = ...  # type: Any
    SHA512 = ...  # type: Any
    hash_alg = ...  # type: Any
    def __init__(self, hash_alg) -> None: ...
    def prepare_key(self, key): ...
    @staticmethod
    def to_jwk(key_obj): ...
    @staticmethod
    def from_jwk(jwk): ...
    def sign(self, msg, key): ...
    def verify(self, msg, key, sig): ...

class RSAAlgorithm(Algorithm):
    SHA256 = ...  # type: Any
    SHA384 = ...  # type: Any
    SHA512 = ...  # type: Any
    hash_alg = ...  # type: Any
    def __init__(self, hash_alg) -> None: ...
    def prepare_key(self, key): ...
    @staticmethod
    def to_jwk(key_obj): ...
    @staticmethod
    def from_jwk(jwk): ...
    def sign(self, msg, key): ...
    def verify(self, msg, key, sig): ...

class ECAlgorithm(Algorithm):
    SHA256 = ...  # type: Any
    SHA384 = ...  # type: Any
    SHA512 = ...  # type: Any
    hash_alg = ...  # type: Any
    def __init__(self, hash_alg) -> None: ...
    def prepare_key(self, key): ...
    def sign(self, msg, key): ...
    def verify(self, msg, key, sig): ...

class RSAPSSAlgorithm(RSAAlgorithm):
    def sign(self, msg, key): ...
    def verify(self, msg, key, sig): ...
